-- OneFile_ESP_TP_PRO_Resize_Spectate_Grab_BugarCarro_ArcEus.client.lua
-- Ferramentas locais para o TEU jogo (admin/debug). Sem código remoto.

-- ========= Serviços =========
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local ContextActionService = game:GetService("ContextActionService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local Lighting = game:GetService("Lighting")

local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- ========= Config =========
local ESP_DEFAULT_ON = true
local SHOW_NAME_DEFAULT = true
local SHOW_HEALTH_DEFAULT = true
local ESP_POSITION_DEFAULT = "Topo"
local ESP_MODE_DEFAULT = "Cheio"
local TEAM_FILTER_DEFAULT = "Todos"

local FILL_COLOR = Color3.fromRGB(255, 0, 0)
local OUTLINE_COLOR = Color3.fromRGB(255, 255, 255)

local UI_TOGGLE_KEY = Enum.KeyCode.M
local FREEFLY_TOGGLE_KEY = Enum.KeyCode.F
local CANCEL_FLY_KEY = Enum.KeyCode.X
local GRAB_TOGGLE_KEY = Enum.KeyCode.H
local UNLOCK_MOUSE_KEY = Enum.KeyCode.P

-- Sistema ArcEus Fly
local BTV = 2
local BA = 80
local BODY_VELOCITY = 100
local BG = 196.2

-- Limites do painel
local PANEL_MIN = Vector2.new(500, 400)
local PANEL_MAX = Vector2.new(900, 700)

-- ========= Estado =========
local espEnabled = ESP_DEFAULT_ON
local showName = SHOW_NAME_DEFAULT
local showHealth = SHOW_HEALTH_DEFAULT
local espPosition = ESP_POSITION_DEFAULT
local espMode = ESP_MODE_DEFAULT
local teamFilter = TEAM_FILTER_DEFAULT

local highlights = {}
local overlays = {}

-- Sistemas ativos
local activeSystems = {
    flyTo = false,
    spectate = false,
    grab = false,
    bugPlayer = false,
    bugCar = false,
    pullCar = false
}

-- free-fly manual (Sistema ArcEus)
local freeflyOn = false
local freeflyConn = nil
local inputStates = {W=false,A=false,S=false,D=false,Space=false,Shift=false,Q=false,E=false}
local bv, bg, ba

-- UI state
local panelVisible = false
local prevMouseBehavior, prevMouseIconEnabled

-- spectate
local spectating = nil
local savedSubject = nil
local savedCamType = nil

-- grab system
local grabbing = false
local grabbedPlayer = nil
local grabConn = nil

-- bugar player system
local buggingPlayers = {}
local bugConn = nil

-- bugar carro system
local buggingCars = {}
local bugCarConn = nil

-- puxar carro system
local pullingCar = nil
local pullCarConn = nil

-- player selection
local selectedPlayer = nil

-- ========= Sistema ArcEus Fly =========
local function ArcEusFly()
    if freeflyOn then
        -- Desativar fly anterior se existir
        if freeflyConn then
            freeflyConn:Disconnect()
            freeflyConn = nil
        end
        
        if bv then bv:Destroy() end
        if bg then bg:Destroy() end
        if ba then ba:Destroy() end
        
        freeflyOn = false
        return
    end
    
    local c = LocalPlayer.Character
    if not c then return end
    
    local t = c:FindFirstChild("HumanoidRootPart") or c:FindFirstChild("Torso")
    if not t then return end
    
    bv = Instance.new("BodyVelocity")
    bg = Instance.new("BodyGyro")
    ba = Instance.new("BodyAngularVelocity")
    
    bv.Parent = t
    bg.Parent = t
    ba.Parent = t
    
    bv.MaxForce = Vector3.new(100000, 100000, 100000)
    bv.Velocity = Vector3.new(0, 0.1, 0)
    bg.MaxTorque = Vector3.new(100000, 100000, 100000)
    bg.P = 100000
    bg.D = 100
    ba.MaxTorque = Vector3.new(0, 0, 0)
    
    -- Ativar noclip
    for _, v in pairs(c:GetDescendants()) do
        if v:IsA("BasePart") then
            v.CanCollide = false
        end
    end
    
    freeflyOn = true
    
    freeflyConn = RunService.Heartbeat:Connect(function()
        if not freeflyOn or not c or not c.Parent then
            ArcEusFly()
            return
        end
        
        t = c:FindFirstChild("HumanoidRootPart") or c:FindFirstChild("Torso")
        if not t then return end
        
        -- Manter noclip
        for _, v in pairs(c:GetDescendants()) do
            if v:IsA("BasePart") then
                v.CanCollide = false
            end
        end
        
        -- Sistema de movimento ArcEus
        local bvPower = BODY_VELOCITY
        local moveDirection = Vector3.new(0, 0, 0)
        
        if inputStates.W then moveDirection = moveDirection + Camera.CFrame.LookVector end
        if inputStates.S then moveDirection = moveDirection - Camera.CFrame.LookVector end
        if inputStates.A then moveDirection = moveDirection - Camera.CFrame.RightVector end
        if inputStates.D then moveDirection = moveDirection + Camera.CFrame.RightVector end
        if inputStates.Space then moveDirection = moveDirection + Vector3.new(0, 1, 0) end
        if inputStates.Shift then moveDirection = moveDirection - Vector3.new(0, 1, 0) end
        
        if moveDirection.Magnitude > 0 then
            moveDirection = moveDirection.Unit * bvPower
        end
        
        bv.Velocity = moveDirection
        bg.CFrame = Camera.CFrame
    end)
end

-- ========= Função para Destravar Mouse =========
local function unlockMouse()
    UserInputService.MouseBehavior = Enum.MouseBehavior.Default
    UserInputService.MouseIconEnabled = true
    print("🔓 Mouse destravado! (Tecla P)")
end

-- ========= Helpers =========
local function getPrimaryPart(char)
    if not char then return nil end
    return char.PrimaryPart
        or char:FindFirstChild("HumanoidRootPart")
        or char:FindFirstChild("Torso")
        or char:FindFirstChild("UpperTorso")
end

local function getHead(char)
    if not char then return nil end
    return char:FindFirstChild("Head") or getPrimaryPart(char)
end

local function forEachCharacterPart(char, fn)
    for _, d in ipairs(char:GetDescendants()) do
        if d:IsA("BasePart") then fn(d) end
    end
end

local function isEnemy(p)
    if not LocalPlayer.Team or not p.Team then return false end
    return p.Team ~= LocalPlayer.Team
end

-- ========= ESP =========
local function applyHighlightMode(h)
    if espMode == "Cheio" then
        h.FillTransparency = 0.3
        h.OutlineTransparency = 0
    else
        h.FillTransparency = 1
        h.OutlineTransparency = 0
    end
end

local function ensureHighlight(character)
    if not character or not character.Parent then return end
    local h = highlights[character]
    if not h or not h.Parent then
        h = Instance.new("Highlight")
        h.Name = "PlayerESP"
        h.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        h.Adornee = character
        h.Parent = LocalPlayer:WaitForChild("PlayerGui")
        highlights[character] = h
    end
    h.FillColor = FILL_COLOR
    h.OutlineColor = OUTLINE_COLOR
    applyHighlightMode(h)
    h.Enabled = espEnabled
end

local function ensureOverlayFor(p, character)
    if not character or not character.Parent then return end
    local bb = overlays[character]
    if not bb or not bb.Parent then
        local head = getHead(character); if not head then return end
        bb = Instance.new("BillboardGui")
        bb.Name = "ESP_Overlay"
        bb.Adornee = head
        bb.Size = UDim2.fromOffset(220, 36)
        bb.AlwaysOnTop = true
        bb.MaxDistance = 10000
        bb.Parent = LocalPlayer:WaitForChild("PlayerGui")

        local holder = Instance.new("Frame")
        holder.Name = "Holder"
        holder.BackgroundTransparency = 1
        holder.Size = UDim2.fromScale(1, 1)
        holder.Parent = bb

        local label = Instance.new("TextLabel")
        label.Name = "Text"
        label.BackgroundTransparency = 1
        label.Size = UDim2.fromScale(1, 1)
        label.Font = Enum.Font.GothamBold
        label.TextSize = 14
        label.TextColor3 = Color3.fromRGB(255,255,255)
        label.TextStrokeTransparency = 0.8
        label.TextStrokeColor3 = Color3.fromRGB(0,0,0)
        label.TextWrapped = true
        label.Text = ""
        label.Parent = holder

        overlays[character] = bb

        character.AncestryChanged:Connect(function(_, parent)
            if not parent then
                if overlays[character] then pcall(function() overlays[character]:Destroy() end) end
                overlays[character] = nil
                if highlights[character] then pcall(function() highlights[character]:Destroy() end) end
                highlights[character] = nil
            end
        end)
    end
end

local function overlayOffsetFor(positionName)
    if positionName == "Topo" then
        return Vector3.new(0, 2.6, 0)
    elseif positionName == "Baixo" then
        return Vector3.new(0, -2.0, 0)
    else
        return Vector3.new(2.5, 1.2, 0)
    end
end

local function updateOverlay(p, character, bb)
    if not bb then return end
    local head = getHead(character); if not head then return end
    bb.Adornee = head
    bb.StudsOffsetWorldSpace = overlayOffsetFor(espPosition)

    local bits = {}
    if showName then table.insert(bits, (p.DisplayName or p.Name) .. " (@"..p.Name..")") end
    if showHealth then
        local hum = character:FindFirstChildOfClass("Humanoid"); if hum then table.insert(bits, ("HP: %d"):format(hum.Health + 0.5)) end
    end
    local label = bb:FindFirstChild("Holder") and bb.Holder:FindFirstChild("Text")
    if label and label:IsA("TextLabel") then label.Text = table.concat(bits, " | ") end

    local visibleByFilter = true
    if teamFilter == "Só inimigos" then visibleByFilter = isEnemy(p) end

    local h = highlights[character]
    if h then
        h.FillColor = FILL_COLOR
        h.OutlineColor = OUTLINE_COLOR
        applyHighlightMode(h)
        h.Enabled = espEnabled and visibleByFilter
    end
    bb.Enabled = espEnabled and (showName or showHealth) and visibleByFilter
end

local function refreshESPForPlayer(p)
    if p == LocalPlayer then return end
    local char = p.Character; if not char then return end
    if espEnabled then
        ensureHighlight(char)
        ensureOverlayFor(p, char)
        updateOverlay(p, char, overlays[char])
    else
        if overlays[char] then overlays[char].Enabled = false end
        if highlights[char] then highlights[char].Enabled = false end
    end
end

-- Inicial + eventos de players
for _, plr in ipairs(Players:GetPlayers()) do
    if plr ~= LocalPlayer and plr.Character then refreshESPForPlayer(plr) end
    plr.CharacterAdded:Connect(function() 
        task.wait(0.5)
        refreshESPForPlayer(plr) 
    end)
    plr:GetPropertyChangedSignal("Team"):Connect(function() if plr ~= LocalPlayer then refreshESPForPlayer(plr) end end)
end
Players.PlayerAdded:Connect(function(plr)
    if plr ~= LocalPlayer then
        plr.CharacterAdded:Connect(function() 
            task.wait(0.5)
            refreshESPForPlayer(plr) 
        end)
        plr:GetPropertyChangedSignal("Team"):Connect(function() refreshESPForPlayer(plr) end)
    end
end)
Players.PlayerRemoving:Connect(function(plr)
    local char = plr.Character
    if char then
        if overlays[char] then pcall(function() overlays[char]:Destroy() end) end
        overlays[char] = nil
        if highlights[char] then pcall(function() highlights[char]:Destroy() end) end
        highlights[char] = nil
    end
end)

-- ========= Sistema de Agarrar =========
local function stopGrab()
    if grabConn then 
        grabConn:Disconnect() 
        grabConn = nil 
    end
    grabbing = false
    activeSystems.grab = false
    
    if grabbedPlayer then
        local char = grabbedPlayer.Character
        if char then
            local hum = char:FindFirstChildOfClass("Humanoid")
            if hum then
                hum.PlatformStand = false
            end
        end
        grabbedPlayer = nil
    end
end

local function startGrab(targetPlayer)
    stopGrab()
    if not targetPlayer or targetPlayer == LocalPlayer then return end
    
    local targetChar = targetPlayer.Character
    local myChar = LocalPlayer.Character
    if not targetChar or not myChar then return end
    
    local targetRoot = getPrimaryPart(targetChar)
    local myRoot = getPrimaryPart(myChar)
    if not targetRoot or not myRoot then return end
    
    local targetHum = targetChar:FindFirstChildOfClass("Humanoid")
    if targetHum then
        targetHum.PlatformStand = true
    end
    
    grabbing = true
    activeSystems.grab = true
    grabbedPlayer = targetPlayer
    
    grabConn = RunService.Heartbeat:Connect(function()
        if not grabbing or not targetPlayer.Parent then 
            stopGrab()
            return 
        end
        
        targetChar = targetPlayer.Character
        myChar = LocalPlayer.Character
        if not targetChar or not myChar then 
            stopGrab()
            return 
        end
        
        targetRoot = getPrimaryPart(targetChar)
        myRoot = getPrimaryPart(myChar)
        if not targetRoot or not myRoot then 
            stopGrab()
            return 
        end
        
        local myCFrame = myRoot.CFrame
        local grabDistance = 4
        local grabOffset = myCFrame.LookVector * grabDistance
        local grabPos = myCFrame.Position + grabOffset + Vector3.new(0, 1, 0)
        
        targetChar:PivotTo(CFrame.new(grabPos))
    end)
end

-- ========= Sistema de Bugar Player =========
local function stopBugPlayer(targetPlayer)
    if buggingPlayers[targetPlayer] then
        buggingPlayers[targetPlayer] = nil
    end
    
    local hasBuggingPlayers = false
    for _ in pairs(buggingPlayers) do
        hasBuggingPlayers = true
        break
    end
    
    if not hasBuggingPlayers and bugConn then
        bugConn:Disconnect()
        bugConn = nil
        activeSystems.bugPlayer = false
    end
end

local function stopAllBugging()
    buggingPlayers = {}
    if bugConn then
        bugConn:Disconnect()
        bugConn = nil
        activeSystems.bugPlayer = false
    end
end

local function createExplosion(position)
    local explosion = Instance.new("Part")
    explosion.Name = "ExplosionEffect"
    explosion.Size = Vector3.new(5, 5, 5)
    explosion.Position = position
    explosion.Anchored = true
    explosion.CanCollide = false
    explosion.Material = Enum.Material.Neon
    explosion.BrickColor = BrickColor.new("Bright orange")
    explosion.Parent = workspace
    
    local light = Instance.new("PointLight")
    light.Brightness = 10
    light.Range = 20
    light.Color = Color3.new(1, 0.3, 0)
    light.Parent = explosion
    
    task.delay(2, function()
        if explosion and explosion.Parent then
            explosion:Destroy()
        end
    end)
    
    return explosion
end

local function startBugPlayer(targetPlayer)
    if not targetPlayer or targetPlayer == LocalPlayer then return end
    
    buggingPlayers[targetPlayer] = true
    activeSystems.bugPlayer = true
    
    if not bugConn then
        bugConn = RunService.Heartbeat:Connect(function()
            for player, _ in pairs(buggingPlayers) do
                if player and player.Parent then
                    local targetChar = player.Character
                    if targetChar then
                        local targetRoot = getPrimaryPart(targetChar)
                        if targetRoot then
                            for i = 1, 2 do
                                local explosionPos = targetRoot.Position + Vector3.new(
                                    math.random(-8, 8),
                                    math.random(0, 5),
                                    math.random(-8, 8)
                                )
                                createExplosion(explosionPos)
                            end
                            
                            local randomPos = targetRoot.Position + Vector3.new(
                                math.random(-10, 10),
                                math.random(0, 5),
                                math.random(-10, 10)
                            )
                            targetChar:PivotTo(CFrame.new(randomPos))
                        end
                    end
                else
                    buggingPlayers[player] = nil
                end
            end
            
            local hasPlayers = false
            for _ in pairs(buggingPlayers) do
                hasPlayers = true
                break
            end
            
            if not hasPlayers then
                bugConn:Disconnect()
                bugConn = nil
                activeSystems.bugPlayer = false
            end
        end)
    end
end

-- ========= Sistema de Bugar Carro FÍSICO =========
local function stopBugCar(vehicle)
    if buggingCars[vehicle] then
        buggingCars[vehicle] = nil
    end
    
    local hasBuggingCars = false
    for _ in pairs(buggingCars) do
        hasBuggingCars = true
        break
    end
    
    if not hasBuggingCars and bugCarConn then
        bugCarConn:Disconnect()
        bugCarConn = nil
        activeSystems.bugCar = false
    end
end

local function stopAllBugCars()
    buggingCars = {}
    if bugCarConn then
        bugCarConn:Disconnect()
        bugCarConn = nil
        activeSystems.bugCar = false
    end
end

local function startBugCar(vehicle)
    if not vehicle then return end
    
    buggingCars[vehicle] = true
    activeSystems.bugCar = true
    
    -- Remover colisão do carro
    forEachCharacterPart(vehicle, function(part)
        part.CanCollide = false
    end)
    
    if not bugCarConn then
        bugCarConn = RunService.Heartbeat:Connect(function()
            for car, _ in pairs(buggingCars) do
                if car and car.Parent then
                    local carRoot = getPrimaryPart(car)
                    if carRoot then
                        -- Aplicar forças FÍSICAS REAIS
                        local bodyVelocity = Instance.new("BodyVelocity")
                        bodyVelocity.Velocity = Vector3.new(
                            math.random(-300, 300),
                            math.random(200, 500),
                            math.random(-300, 300)
                        )
                        bodyVelocity.MaxForce = Vector3.new(1000000, 1000000, 1000000)
                        bodyVelocity.Parent = carRoot
                        
                        -- Aplicar rotação caótica
                        local bodyAngularVelocity = Instance.new("BodyAngularVelocity")
                        bodyAngularVelocity.AngularVelocity = Vector3.new(
                            math.random(-50, 50),
                            math.random(-50, 50),
                            math.random(-50, 50)
                        )
                        bodyAngularVelocity.MaxTorque = Vector3.new(1000000, 1000000, 1000000)
                        bodyAngularVelocity.Parent = carRoot
                        
                        -- TP aleatório agressivo
                        local randomPos = carRoot.Position + Vector3.new(
                            math.random(-25, 25),
                            math.random(10, 30),
                            math.random(-25, 25)
                        )
                        car:PivotTo(CFrame.new(randomPos))
                        
                        -- Criar explosões
                        createExplosion(carRoot.Position + Vector3.new(math.random(-8, 8), 2, math.random(-8, 8)))
                        
                        -- Remover forças após um tempo
                        task.delay(0.4, function()
                            if bodyVelocity and bodyVelocity.Parent then
                                bodyVelocity:Destroy()
                            end
                            if bodyAngularVelocity and bodyAngularVelocity.Parent then
                                bodyAngularVelocity:Destroy()
                            end
                        end)
                    end
                else
                    buggingCars[car] = nil
                end
            end
            
            local hasCars = false
            for _ in pairs(buggingCars) do
                hasCars = true
                break
            end
            
            if not hasCars then
                bugCarConn:Disconnect()
                bugCarConn = nil
                activeSystems.bugCar = false
            end
        end)
    end
end

-- ========= Sistema de Puxar Carro =========
local function stopPullCar()
    if pullCarConn then 
        pullCarConn:Disconnect() 
        pullCarConn = nil 
    end
    pullingCar = nil
    activeSystems.pullCar = false
end

local function startPullCar(vehicle)
    if not vehicle then return end
    
    stopPullCar()
    pullingCar = vehicle
    activeSystems.pullCar = true
    
    pullCarConn = RunService.Heartbeat:Connect(function()
        if not pullingCar or not pullingCar.Parent then 
            stopPullCar()
            return 
        end
        
        local myChar = LocalPlayer.Character
        if not myChar then 
            stopPullCar()
            return 
        end
        
        local myRoot = getPrimaryPart(myChar)
        local carRoot = getPrimaryPart(pullingCar)
        if not myRoot or not carRoot then 
            stopPullCar()
            return 
        end
        
        -- Puxar carro para perto do jogador
        local myCFrame = myRoot.CFrame
        local pullDistance = 8
        local pullOffset = myCFrame.LookVector * pullDistance
        local pullPos = myCFrame.Position + pullOffset + Vector3.new(0, 1, 0)
        
        pullingCar:PivotTo(CFrame.new(pullPos))
    end)
end

-- ========= Encontrar Carro do Player =========
local function findPlayerCar(player)
    if not player or not player.Character then return nil end
    
    local playerRoot = getPrimaryPart(player.Character)
    if not playerRoot then return nil end
    
    -- Procurar por veículos no workspace
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("Model") then
            -- Verificar se é um veículo
            local isVehicle = false
            
            -- Verificar por assentos com ocupantes
            local driveSeat = obj:FindFirstChild("DriveSeat")
            local seat = obj:FindFirstChild("Seat")
            
            if driveSeat and driveSeat:IsA("VehicleSeat") then
                if driveSeat.Occupant then
                    local humanoid = driveSeat.Occupant:FindFirstAncestorOfClass("Model")
                    if humanoid and humanoid == player.Character then
                        isVehicle = true
                    end
                end
            end
            
            if seat and seat:IsA("Seat") then
                if seat.Occupant then
                    local humanoid = seat.Occupant:FindFirstAncestorOfClass("Model")
                    if humanoid and humanoid == player.Character then
                        isVehicle = true
                    end
                end
            end
            
            -- Verificar por proximidade
            if not isVehicle then
                local carRoot = getPrimaryPart(obj)
                if carRoot and (carRoot.Position - playerRoot.Position).Magnitude < 10 then
                    local nameLower = obj.Name:lower()
                    if nameLower:find("car") or nameLower:find("vehicle") or nameLower:find("auto") then
                        isVehicle = true
                    end
                end
            end
            
            if isVehicle then
                return obj
            end
        end
    end
    
    return nil
end

-- Função para encontrar carros próximos
local function findNearbyCars()
    local cars = {}
    local myChar = LocalPlayer.Character
    if not myChar then return cars end
    
    local myRoot = getPrimaryPart(myChar)
    if not myRoot then return cars end
    
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("Model") then
            local isVehicle = false
            local driveSeat = obj:FindFirstChild("DriveSeat")
            local seat = obj:FindFirstChild("Seat")
            local nameLower = obj.Name:lower()
            
            if driveSeat or seat or nameLower:find("car") or nameLower:find("vehicle") or nameLower:find("auto") then
                isVehicle = true
            end
            
            if obj:FindFirstChild("Wheel") or obj:FindFirstChild("Handle") then
                isVehicle = true
            end
            
            if isVehicle then
                local carRoot = getPrimaryPart(obj)
                if carRoot and (carRoot.Position - myRoot.Position).Magnitude < 100 then
                    table.insert(cars, obj)
                end
            end
        end
    end
    
    return cars
end

-- ========= Sistema Voar Até =========
local function stopFlyTo()
    if activeSystems.flyTo then
        activeSystems.flyTo = false
    end
end

local function startFlyTo(targetPlayer)
    if not targetPlayer or targetPlayer == LocalPlayer then return end
    
    stopFlyTo()
    activeSystems.flyTo = true
    
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if not activeSystems.flyTo or not targetPlayer.Parent then 
            connection:Disconnect()
            return 
        end
        
        local char = LocalPlayer.Character
        local targetChar = targetPlayer.Character
        if not char or not targetChar then 
            connection:Disconnect()
            return 
        end
        
        local srcPart = getPrimaryPart(char)
        local dstPart = getPrimaryPart(targetChar)
        if not srcPart or not dstPart then 
            connection:Disconnect()
            return 
        end
        
        local src = srcPart.Position
        local dst = dstPart.Position + Vector3.new(0, 3, 0)
        local dir = (dst - src)
        local dist = dir.Magnitude
        
        if dist <= 3 then 
            connection:Disconnect()
            activeSystems.flyTo = false
            return 
        end
        
        local step = math.min(100, dist)
        local newPos = src + dir.Unit * step
        char:PivotTo(CFrame.new(newPos, dst))
    end)
end

-- ========= Spectate =========
local function startSpectate(p)
    if not p or p == LocalPlayer then return end
    local targetChar = p.Character
    if not targetChar then return end
    local hum = targetChar:FindFirstChildOfClass("Humanoid")
    if not hum then return end

    if not savedSubject then savedSubject = Camera.CameraSubject end
    if not savedCamType then savedCamType = Camera.CameraType end

    Camera.CameraType = Enum.CameraType.Custom
    Camera.CameraSubject = hum
    spectating = p
    activeSystems.spectate = true
end

local function stopSpectate()
    if savedSubject then Camera.CameraSubject = savedSubject end
    if savedCamType then Camera.CameraType = savedCamType end
    spectating = nil
    activeSystems.spectate = false
end

-- ========= Função para Cancelar Ação Ativa =========
local function cancelActiveAction()
    if activeSystems.flyTo then
        stopFlyTo()
    elseif activeSystems.spectate then
        stopSpectate()
    elseif activeSystems.grab then
        stopGrab()
    elseif activeSystems.bugPlayer then
        stopAllBugging()
    elseif activeSystems.bugCar then
        stopAllBugCars()
    elseif activeSystems.pullCar then
        stopPullCar()
    end
end

-- ========= UI =========
local playerGui = LocalPlayer:WaitForChild("PlayerGui")
local gui = Instance.new("ScreenGui")
gui.Name = "ESP_TP_UI_Pro"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.Parent = playerGui

local function getSavedSize()
    local w = gui:GetAttribute("PanelW")
    local h = gui:GetAttribute("PanelH")
    if typeof(w) == "number" and typeof(h) == "number" then
        return Vector2.new(math.clamp(w, PANEL_MIN.X, PANEL_MAX.X), math.clamp(h, PANEL_MIN.Y, PANEL_MAX.Y))
    end
    return Vector2.new(500, 400)
end

local function saveSize(v2)
    gui:SetAttribute("PanelW", math.floor(v2.X))
    gui:SetAttribute("PanelH", math.floor(v2.Y))
end

local frame = Instance.new("Frame")
frame.Name = "Main"
local startSize = getSavedSize()
frame.Size = UDim2.fromOffset(startSize.X, startSize.Y)
frame.Position = UDim2.new(0, 24, 0, 80)
frame.BackgroundColor3 = Color3.fromRGB(22,22,26)
frame.Active = true
frame.Draggable = true
frame.Visible = false
frame.Parent = gui
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)

local title = Instance.new("TextLabel")
title.BackgroundTransparency = 1
title.Size = UDim2.new(1, -42, 0, 24)
title.Position = UDim2.new(0, 8, 0, 6)
title.Font = Enum.Font.GothamBold
title.TextSize = 16
title.TextColor3 = Color3.new(1,1,1)
title.TextXAlignment = Enum.TextXAlignment.Left
title.Text = "Painel Admin (M abre/fecha • P destrava mouse • F ArcEus Fly • H Agarrar • X cancela)"
title.Parent = frame

-- Botão fechar
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.fromOffset(24, 24)
closeBtn.Position = UDim2.new(1, -28, 0, 6)
closeBtn.Text = "×"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 18
closeBtn.BackgroundColor3 = Color3.fromRGB(40,40,48)
closeBtn.TextColor3 = Color3.fromRGB(255,255,255)
closeBtn.Parent = frame
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(1, 0)
closeBtn.MouseButton1Click:Connect(function() 
    frame.Visible = false; 
    panelVisible = false 
    if prevMouseBehavior then UserInputService.MouseBehavior = prevMouseBehavior end
    if prevMouseIconEnabled ~= nil then UserInputService.MouseIconEnabled = prevMouseIconEnabled end
end)

-- Grip de redimensionar
local resize = Instance.new("Frame")
resize.Name = "ResizeGrip"
resize.Size = UDim2.fromOffset(18, 18)
resize.AnchorPoint = Vector2.new(1, 1)
resize.Position = UDim2.new(1, -4, 1, -4)
resize.BackgroundColor3 = Color3.fromRGB(50,50,60)
resize.Parent = frame
Instance.new("UICorner", resize).CornerRadius = UDim.new(0, 4)

local resizing = false
local resizeStartPos, resizeStartSize
resize.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        resizing = true
        resizeStartPos = UserInputService:GetMouseLocation()
        resizeStartSize = frame.AbsoluteSize
    end
end)
UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        if resizing then
            resizing = false
            saveSize(frame.AbsoluteSize)
        end
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if resizing and input.UserInputType == Enum.UserInputType.MouseMovement then
        local now = UserInputService:GetMouseLocation()
        local delta = now - resizeStartPos
        local newW = math.clamp(resizeStartSize.X + delta.X, PANEL_MIN.X, PANEL_MAX.X)
        local newH = math.clamp(resizeStartSize.Y + delta.Y, PANEL_MIN.Y, PANEL_MAX.Y)
        frame.Size = UDim2.fromOffset(newW, newH)
    end
end)

-- Tabs
local tabs = Instance.new("Frame")
tabs.Size = UDim2.new(1, -16, 0, 28)
tabs.Position = UDim2.new(0, 8, 0, 32)
tabs.BackgroundTransparency = 1
tabs.Parent = frame

local function makeTab(text, x)
    local b = Instance.new("TextButton")
    b.Size = UDim2.fromOffset(120, 28)
    b.Position = UDim2.new(0, x, 0, 0)
    b.Text = text
    b.Font = Enum.Font.GothamBold
    b.TextSize = 14
    b.BackgroundColor3 = Color3.fromRGB(40,40,48)
    b.TextColor3 = Color3.fromRGB(255,255,255)
    b.Parent = tabs
    Instance.new("UICorner", b).CornerRadius = UDim.new(0, 6)
    return b
end

local tabPlayers = makeTab("Jogadores", 0)
local tabESP = makeTab("ESP", 122)
local tabUtil = makeTab("Util", 244)

local pages = Instance.new("Frame")
pages.Size = UDim2.new(1, -16, 1, -74)
pages.Position = UDim2.new(0, 8, 0, 64)
pages.BackgroundTransparency = 1
pages.Parent = frame

local function makePage()
    local p = Instance.new("Frame")
    p.Size = UDim2.fromScale(1,1)
    p.BackgroundTransparency = 1
    p.Visible = false
    p.Parent = pages
    return p
end

-- Página Jogadores
local playersPage = makePage(); playersPage.Visible = true

-- Lista de jogadores
local playersListFrame = Instance.new("Frame")
playersListFrame.Size = UDim2.new(0.4, 0, 1, 0)
playersListFrame.BackgroundColor3 = Color3.fromRGB(28,28,34)
playersListFrame.Parent = playersPage
Instance.new("UICorner", playersListFrame).CornerRadius = UDim.new(0, 6)

local playersListTitle = Instance.new("TextLabel")
playersListTitle.BackgroundTransparency = 1
playersListTitle.Size = UDim2.new(1, 0, 0, 30)
playersListTitle.Position = UDim2.new(0, 0, 0, 0)
playersListTitle.Font = Enum.Font.GothamBold
playersListTitle.TextSize = 14
playersListTitle.TextColor3 = Color3.fromRGB(255,255,255)
playersListTitle.Text = "JOGADORES ONLINE"
playersListTitle.Parent = playersListFrame

local playersList = Instance.new("ScrollingFrame")
playersList.Size = UDim2.new(1, -8, 1, -38)
playersList.Position = UDim2.new(0, 4, 0, 34)
playersList.CanvasSize = UDim2.new(0,0,0,0)
playersList.ScrollBarThickness = 6
playersList.BackgroundColor3 = Color3.fromRGB(32,32,38)
playersList.BorderSizePixel = 0
playersList.Parent = playersListFrame
Instance.new("UICorner", playersList).CornerRadius = UDim.new(0,4)
local playersLayout = Instance.new("UIListLayout", playersList)
playersLayout.Padding = UDim.new(0,4)
playersLayout.SortOrder = Enum.SortOrder.Name

-- Painel de ações
local actionsFrame = Instance.new("Frame")
actionsFrame.Size = UDim2.new(0.58, 0, 1, 0)
actionsFrame.Position = UDim2.new(0.42, 0, 0, 0)
actionsFrame.BackgroundColor3 = Color3.fromRGB(28,28,34)
actionsFrame.Parent = playersPage
Instance.new("UICorner", actionsFrame).CornerRadius = UDim.new(0, 6)

local selectedPlayerTitle = Instance.new("TextLabel")
selectedPlayerTitle.BackgroundTransparency = 1
selectedPlayerTitle.Size = UDim2.new(1, 0, 0, 40)
selectedPlayerTitle.Position = UDim2.new(0, 0, 0, 0)
selectedPlayerTitle.Font = Enum.Font.GothamBold
selectedPlayerTitle.TextSize = 16
selectedPlayerTitle.TextColor3 = Color3.fromRGB(255,255,255)
selectedPlayerTitle.Text = "SELECIONE UM JOGADOR"
selectedPlayerTitle.Parent = actionsFrame

local actionsContainer = Instance.new("Frame")
actionsContainer.Size = UDim2.new(1, -16, 1, -50)
actionsContainer.Position = UDim2.new(0, 8, 0, 44)
actionsContainer.BackgroundTransparency = 1
actionsContainer.Parent = actionsFrame

-- Botão Cancelar Ação
local cancelActionBtn = Instance.new("TextButton")
cancelActionBtn.Size = UDim2.new(1, 0, 0, 36)
cancelActionBtn.Position = UDim2.new(0, 0, 0, 250)
cancelActionBtn.Text = "CANCELAR AÇÃO ATIVA"
cancelActionBtn.Font = Enum.Font.GothamBold
cancelActionBtn.TextSize = 14
cancelActionBtn.BackgroundColor3 = Color3.fromRGB(200, 40, 40)
cancelActionBtn.TextColor3 = Color3.fromRGB(255,255,255)
cancelActionBtn.Visible = false
cancelActionBtn.Parent = actionsContainer
Instance.new("UICorner", cancelActionBtn).CornerRadius = UDim.new(0, 6)
cancelActionBtn.MouseButton1Click:Connect(cancelActiveAction)

-- Função para criar botões de ação
local function createActionButton(text, color, yPosition, callback)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, 0, 0, 36)
    btn.Position = UDim2.new(0, 0, 0, yPosition)
    btn.Text = text
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 14
    btn.BackgroundColor3 = color
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.Parent = actionsContainer
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
    
    btn.MouseButton1Click:Connect(function()
        if selectedPlayer then
            callback(selectedPlayer)
            -- Mostrar botão cancelar após iniciar ação
            cancelActionBtn.Visible = true
        end
    end)
    
    return btn
end

-- Criar botões de ação
local tpBtn = createActionButton("TELEPORTAR", Color3.fromRGB(0,160,90), 0, function(player)
    local char = LocalPlayer.Character
    local targetChar = player.Character
    if not char or not targetChar then return end
    
    local srcPart = getPrimaryPart(char)
    local dstPart = getPrimaryPart(targetChar)
    if not srcPart or not dstPart then return end
    
    char:PivotTo(CFrame.new(dstPart.Position + Vector3.new(0, 3, 0)))
end)

local flyBtn = createActionButton("VOAR ATÉ", Color3.fromRGB(0,140,200), 42, startFlyTo)
local spectateBtn = createActionButton("ESPECTAR", Color3.fromRGB(160,120,0), 84, startSpectate)
local grabBtn = createActionButton("AGARRAR", Color3.fromRGB(180,60,180), 126, startGrab)
local bugBtn = createActionButton("BUGAR PLAYER", Color3.fromRGB(200,40,40), 168, function(player)
    if buggingPlayers[player] then
        stopBugPlayer(player)
        bugBtn.Text = "BUGAR PLAYER"
        bugBtn.BackgroundColor3 = Color3.fromRGB(200,40,40)
    else
        startBugPlayer(player)
        bugBtn.Text = "PARAR BUG"
        bugBtn.BackgroundColor3 = Color3.fromRGB(40,200,40)
    end
end)

-- Botão especial para carros do player
local carBtn = createActionButton("VER CARRO DO PLAYER", Color3.fromRGB(0,100,200), 210, function(player)
    local playerCar = findPlayerCar(player)
    if playerCar then
        -- Bugar o carro do player (com pessoas dentro)
        startBugCar(playerCar)
        carBtn.Text = "PARAR BUG CARRO"
        carBtn.BackgroundColor3 = Color3.fromRGB(40,200,40)
    else
        stopAllBugCars()
        carBtn.Text = "VER CARRO DO PLAYER"
        carBtn.BackgroundColor3 = Color3.fromRGB(0,100,200)
    end
end)

-- Inicialmente esconder os botões de ação
local function hideActionButtons()
    tpBtn.Visible = false
    flyBtn.Visible = false
    spectateBtn.Visible = false
    grabBtn.Visible = false
    bugBtn.Visible = false
    carBtn.Visible = false
    cancelActionBtn.Visible = false
    selectedPlayerTitle.Text = "SELECIONE UM JOGADOR"
end

-- Mostrar botões de ação quando um player é selecionado
local function showActionButtons(player)
    tpBtn.Visible = true
    flyBtn.Visible = true
    spectateBtn.Visible = true
    grabBtn.Visible = true
    bugBtn.Visible = true
    carBtn.Visible = true
    
    -- Atualizar textos dos botões
    if buggingPlayers[player] then
        bugBtn.Text = "PARAR BUG"
        bugBtn.BackgroundColor3 = Color3.fromRGB(40,200,40)
    else
        bugBtn.Text = "BUGAR PLAYER"
        bugBtn.BackgroundColor3 = Color3.fromRGB(200,40,40)
    end
    
    -- Verificar se o player tem carro
    local playerCar = findPlayerCar(player)
    if playerCar then
        carBtn.Text = "BUGAR CARRO DO PLAYER"
        carBtn.BackgroundColor3 = Color3.fromRGB(220,40,40)
    else
        carBtn.Text = "PLAYER SEM CARRO"
        carBtn.BackgroundColor3 = Color3.fromRGB(80,80,80)
    end
    
    selectedPlayerTitle.Text = "AÇÕES: " .. (player.DisplayName or player.Name)
end

hideActionButtons()

-- Página ESP
local espPage = makePage()

local espToggle = Instance.new("TextButton")
espToggle.Size = UDim2.fromOffset(160, 28)
espToggle.Position = UDim2.new(0, 0, 0, 0)
espToggle.Text = "ESP: " .. (espEnabled and "ON" or "OFF")
espToggle.Font = Enum.Font.GothamBold
espToggle.TextSize = 14
espToggle.BackgroundColor3 = espEnabled and Color3.fromRGB(0,160,90) or Color3.fromRGB(160,0,0)
espToggle.TextColor3 = Color3.fromRGB(255,255,255)
espToggle.Parent = espPage
Instance.new("UICorner", espToggle).CornerRadius = UDim.new(0,6)
espToggle.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    espToggle.Text = "ESP: " .. (espEnabled and "ON" or "OFF")
    espToggle.BackgroundColor3 = espEnabled and Color3.fromRGB(0,160,90) or Color3.fromRGB(160,0,0)
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then
            refreshESPForPlayer(p)
        end
    end
end)

local nameToggle = Instance.new("TextButton")
nameToggle.Size = UDim2.fromOffset(160, 28)
nameToggle.Position = UDim2.new(0, 0, 0, 36)
nameToggle.Text = "Nomes: " .. (showName and "ON" or "OFF")
nameToggle.Font = Enum.Font.GothamBold
nameToggle.TextSize = 14
nameToggle.BackgroundColor3 = showName and Color3.fromRGB(0,160,90) or Color3.fromRGB(160,0,0)
nameToggle.TextColor3 = Color3.fromRGB(255,255,255)
nameToggle.Parent = espPage
Instance.new("UICorner", nameToggle).CornerRadius = UDim.new(0,6)
nameToggle.MouseButton1Click:Connect(function()
    showName = not showName
    nameToggle.Text = "Nomes: " .. (showName and "ON" or "OFF")
    nameToggle.BackgroundColor3 = showName and Color3.fromRGB(0,160,90) or Color3.fromRGB(160,0,0)
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then
            refreshESPForPlayer(p)
        end
    end
end)

local healthToggle = Instance.new("TextButton")
healthToggle.Size = UDim2.fromOffset(160, 28)
healthToggle.Position = UDim2.new(0, 0, 0, 72)
healthToggle.Text = "Vida: " .. (showHealth and "ON" or "OFF")
healthToggle.Font = Enum.Font.GothamBold
healthToggle.TextSize = 14
healthToggle.BackgroundColor3 = showHealth and Color3.fromRGB(0,160,90) or Color3.fromRGB(160,0,0)
healthToggle.TextColor3 = Color3.fromRGB(255,255,255)
healthToggle.Parent = espPage
Instance.new("UICorner", healthToggle).CornerRadius = UDim.new(0,6)
healthToggle.MouseButton1Click:Connect(function()
    showHealth = not showHealth
    healthToggle.Text = "Vida: " .. (showHealth and "ON" or "OFF")
    healthToggle.BackgroundColor3 = showHealth and Color3.fromRGB(0,160,90) or Color3.fromRGB(160,0,0)
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then
            refreshESPForPlayer(p)
        end
    end
end)

-- Dropdown para posição do ESP
local positionLabel = Instance.new("TextLabel")
positionLabel.BackgroundTransparency = 1
positionLabel.Size = UDim2.fromOffset(160, 20)
positionLabel.Position = UDim2.new(0, 0, 0, 110)
positionLabel.Font = Enum.Font.Gotham
positionLabel.TextSize = 12
positionLabel.TextColor3 = Color3.fromRGB(220,220,230)
positionLabel.Text = "Posição do ESP:"
positionLabel.TextXAlignment = Enum.TextXAlignment.Left
positionLabel.Parent = espPage

local positionDropdown = Instance.new("TextButton")
positionDropdown.Size = UDim2.fromOffset(160, 28)
positionDropdown.Position = UDim2.new(0, 0, 0, 130)
positionDropdown.Text = espPosition
positionDropdown.Font = Enum.Font.Gotham
positionDropdown.TextSize = 14
positionDropdown.BackgroundColor3 = Color3.fromRGB(60,60,70)
positionDropdown.TextColor3 = Color3.fromRGB(255,255,255)
positionDropdown.Parent = espPage
Instance.new("UICorner", positionDropdown).CornerRadius = UDim.new(0,6)

positionDropdown.MouseButton1Click:Connect(function()
    local positions = {"Topo", "Baixo", "Lateral"}
    local currentIndex = table.find(positions, espPosition) or 1
    local nextIndex = currentIndex % #positions + 1
    espPosition = positions[nextIndex]
    positionDropdown.Text = espPosition
    
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then
            refreshESPForPlayer(p)
        end
    end
end)

-- Dropdown para modo do ESP
local modeLabel = Instance.new("TextLabel")
modeLabel.BackgroundTransparency = 1
modeLabel.Size = UDim2.fromOffset(160, 20)
modeLabel.Position = UDim2.new(0, 0, 0, 168)
modeLabel.Font = Enum.Font.Gotham
modeLabel.TextSize = 12
modeLabel.TextColor3 = Color3.fromRGB(220,220,230)
modeLabel.Text = "Modo do ESP:"
modeLabel.TextXAlignment = Enum.TextXAlignment.Left
modeLabel.Parent = espPage

local modeDropdown = Instance.new("TextButton")
modeDropdown.Size = UDim2.fromOffset(160, 28)
modeDropdown.Position = UDim2.new(0, 0, 0, 188)
modeDropdown.Text = espMode
modeDropdown.Font = Enum.Font.Gotham
modeDropdown.TextSize = 14
modeDropdown.BackgroundColor3 = Color3.fromRGB(60,60,70)
modeDropdown.TextColor3 = Color3.fromRGB(255,255,255)
modeDropdown.Parent = espPage
Instance.new("UICorner", modeDropdown).CornerRadius = UDim.new(0,6)

modeDropdown.MouseButton1Click:Connect(function()
    local modes = {"Cheio", "Contorno"}
    local currentIndex = table.find(modes, espMode) or 1
    local nextIndex = currentIndex % #modes + 1
    espMode = modes[nextIndex]
    modeDropdown.Text = espMode
    
    for char, h in pairs(highlights) do
        if h and h.Parent then
            applyHighlightMode(h)
        end
    end
end)

-- Dropdown para filtro de time
local teamLabel = Instance.new("TextLabel")
teamLabel.BackgroundTransparency = 1
teamLabel.Size = UDim2.fromOffset(160, 20)
teamLabel.Position = UDim2.new(0, 0, 0, 226)
teamLabel.Font = Enum.Font.Gotham
teamLabel.TextSize = 12
teamLabel.TextColor3 = Color3.fromRGB(220,220,230)
teamLabel.Text = "Filtro de Time:"
teamLabel.TextXAlignment = Enum.TextXAlignment.Left
teamLabel.Parent = espPage

local teamDropdown = Instance.new("TextButton")
teamDropdown.Size = UDim2.fromOffset(160, 28)
teamDropdown.Position = UDim2.new(0, 0, 0, 246)
teamDropdown.Text = teamFilter
teamDropdown.Font = Enum.Font.Gotham
teamDropdown.TextSize = 14
teamDropdown.BackgroundColor3 = Color3.fromRGB(60,60,70)
teamDropdown.TextColor3 = Color3.fromRGB(255,255,255)
teamDropdown.Parent = espPage
Instance.new("UICorner", teamDropdown).CornerRadius = UDim.new(0,6)

teamDropdown.MouseButton1Click:Connect(function()
    local filters = {"Todos", "Só inimigos"}
    local currentIndex = table.find(filters, teamFilter) or 1
    local nextIndex = currentIndex % #filters + 1
    teamFilter = filters[nextIndex]
    teamDropdown.Text = teamFilter
    
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then
            refreshESPForPlayer(p)
        end
    end
end)

-- Página Util
local utilPage = makePage()
local invisToggle = Instance.new("TextButton")
invisToggle.Size = UDim2.fromOffset(160, 28)
invisToggle.Position = UDim2.new(0, 0, 0, 0)
invisToggle.Text = "Invisível (local): OFF"
invisToggle.Font = Enum.Font.GothamBold
invisToggle.TextSize = 14
invisToggle.BackgroundColor3 = Color3.fromRGB(60,60,70)
invisToggle.TextColor3 = Color3.fromRGB(255,255,255)
invisToggle.Parent = utilPage
Instance.new("UICorner", invisToggle).CornerRadius = UDim.new(0,6)

local freeflyToggleBtn = Instance.new("TextButton")
freeflyToggleBtn.Size = UDim2.fromOffset(160, 28)
freeflyToggleBtn.Position = UDim2.new(0, 0, 0, 36)
freeflyToggleBtn.Text = "ArcEus Fly: OFF (F)"
freeflyToggleBtn.Font = Enum.Font.GothamBold
freeflyToggleBtn.TextSize = 14
freeflyToggleBtn.BackgroundColor3 = Color3.fromRGB(40,40,48)
freeflyToggleBtn.TextColor3 = Color3.fromRGB(255,255,255)
freeflyToggleBtn.Parent = utilPage
Instance.new("UICorner", freeflyToggleBtn).CornerRadius = UDim.new(0,6)
freeflyToggleBtn.MouseButton1Click:Connect(function()
    ArcEusFly()
    freeflyToggleBtn.Text = "ArcEus Fly: " .. (freeflyOn and "ON (F)" or "OFF (F)")
end)

local grabToggleBtn = Instance.new("TextButton")
grabToggleBtn.Size = UDim2.fromOffset(160, 28)
grabToggleBtn.Position = UDim2.new(0, 0, 0, 72)
grabToggleBtn.Text = "Agarrar Próximo: OFF (H)"
grabToggleBtn.Font = Enum.Font.GothamBold
grabToggleBtn.TextSize = 14
grabToggleBtn.BackgroundColor3 = Color3.fromRGB(120,40,120)
grabToggleBtn.TextColor3 = Color3.fromRGB(255,255,255)
grabToggleBtn.Parent = utilPage
Instance.new("UICorner", grabToggleBtn).CornerRadius = UDim.new(0,6)
grabToggleBtn.MouseButton1Click:Connect(function()
    local myChar = LocalPlayer.Character
    if not myChar then return end
    
    local myRoot = getPrimaryPart(myChar)
    if not myRoot then return end
    
    local nearestPlayer = nil
    local nearestDistance = 20
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local targetRoot = getPrimaryPart(player.Character)
            if targetRoot then
                local distance = (targetRoot.Position - myRoot.Position).Magnitude
                if distance <= nearestDistance then
                    nearestDistance = distance
                    nearestPlayer = player
                end
            end
        end
    end
    
    if nearestPlayer then
        startGrab(nearestPlayer)
    end
end)

local bugCarBtn = Instance.new("TextButton")
bugCarBtn.Size = UDim2.fromOffset(160, 28)
bugCarBtn.Position = UDim2.new(0, 0, 0, 108)
bugCarBtn.Text = "BUGAR CARROS PRÓXIMOS"
bugCarBtn.Font = Enum.Font.GothamBold
bugCarBtn.TextSize = 14
bugCarBtn.BackgroundColor3 = Color3.fromRGB(200,40,40)
bugCarBtn.TextColor3 = Color3.fromRGB(255,255,255)
bugCarBtn.Parent = utilPage
Instance.new("UICorner", bugCarBtn).CornerRadius = UDim.new(0,6)
bugCarBtn.MouseButton1Click:Connect(function()
    local cars = findNearbyCars()
    if #cars > 0 then
        for _, car in ipairs(cars) do
            startBugCar(car)
        end
        bugCarBtn.Text = "PARAR BUG CARROS"
        bugCarBtn.BackgroundColor3 = Color3.fromRGB(40,200,40)
    else
        stopAllBugCars()
        bugCarBtn.Text = "BUGAR CARROS PRÓXIMOS"
        bugCarBtn.BackgroundColor3 = Color3.fromRGB(200,40,40)
    end
end)

local pullCarBtn = Instance.new("TextButton")
pullCarBtn.Size = UDim2.fromOffset(160, 28)
pullCarBtn.Position = UDim2.new(0, 0, 0, 144)
pullCarBtn.Text = "PUXAR CARRO PRÓXIMO"
pullCarBtn.Font = Enum.Font.GothamBold
pullCarBtn.TextSize = 14
pullCarBtn.BackgroundColor3 = Color3.fromRGB(0,150,200)
pullCarBtn.TextColor3 = Color3.fromRGB(255,255,255)
pullCarBtn.Parent = utilPage
Instance.new("UICorner", pullCarBtn).CornerRadius = UDim.new(0,6)
pullCarBtn.MouseButton1Click:Connect(function()
    local cars = findNearbyCars()
    if #cars > 0 then
        if activeSystems.pullCar then
            stopPullCar()
            pullCarBtn.Text = "PUXAR CARRO PRÓXIMO"
            pullCarBtn.BackgroundColor3 = Color3.fromRGB(0,150,200)
        else
            startPullCar(cars[1])
            pullCarBtn.Text = "SOLTAR CARRO"
            pullCarBtn.BackgroundColor3 = Color3.fromRGB(40,200,40)
        end
    end
end)

local stopAllBtn = Instance.new("TextButton")
stopAllBtn.Size = UDim2.fromOffset(160, 28)
stopAllBtn.Position = UDim2.new(0, 0, 0, 180)
stopAllBtn.Text = "PARAR TUDO"
stopAllBtn.Font = Enum.Font.GothamBold
stopAllBtn.TextSize = 14
stopAllBtn.BackgroundColor3 = Color3.fromRGB(200,40,40)
stopAllBtn.TextColor3 = Color3.fromRGB(255,255,255)
stopAllBtn.Parent = utilPage
Instance.new("UICorner", stopAllBtn).CornerRadius = UDim.new(0,6)
stopAllBtn.MouseButton1Click:Connect(function()
    cancelActiveAction()
    ArcEusFly()
    stopAllBugging()
    stopAllBugCars()
    stopPullCar()
end)

local unlockMouseBtn = Instance.new("TextButton")
unlockMouseBtn.Size = UDim2.fromOffset(160, 28)
unlockMouseBtn.Position = UDim2.new(0, 0, 0, 216)
unlockMouseBtn.Text = "DESTRAVAR MOUSE (P)"
unlockMouseBtn.Font = Enum.Font.GothamBold
unlockMouseBtn.TextSize = 14
unlockMouseBtn.BackgroundColor3 = Color3.fromRGB(0, 100, 200)
unlockMouseBtn.TextColor3 = Color3.fromRGB(255,255,255)
unlockMouseBtn.Parent = utilPage
Instance.new("UICorner", unlockMouseBtn).CornerRadius = UDim.new(0,6)
unlockMouseBtn.MouseButton1Click:Connect(unlockMouse)

local ffHint = Instance.new("TextLabel")
ffHint.BackgroundTransparency = 1
ffHint.Size = UDim2.new(1, -10, 0, 120)
ffHint.Position = UDim2.new(0, 0, 0, 252)
ffHint.Font = Enum.Font.Gotham
ffHint.TextSize = 12
ffHint.TextColor3 = Color3.fromRGB(220,220,230)
ffHint.TextXAlignment = Enum.TextXAlignment.Left
ffHint.Text = "CONTROLES:\n• M: Abrir/Fechar painel\n• P: Destravar mouse\n• F: ArcEus Fly (Noclip)\n• H: Agarrar/Soltar próximo\n• X: Cancelar ação\n\nARC-EUS FLY:\n• W/S: Frente/Trás\n• A/D: Esquerda/Direita\n• Espaço: Subir\n• Shift: Descer"
ffHint.Parent = utilPage

-- Troca de tabs
local function setTab(which)
    tabPlayers.BackgroundColor3 = Color3.fromRGB(30,30,36)
    tabESP.BackgroundColor3 = Color3.fromRGB(30,30,36)
    tabUtil.BackgroundColor3 = Color3.fromRGB(30,30,36)
    playersPage.Visible=false; espPage.Visible=false; utilPage.Visible=false
    if which=="PLAYERS" then tabPlayers.BackgroundColor3=Color3.fromRGB(40,40,48); playersPage.Visible=true
    elseif which=="ESP" then tabESP.BackgroundColor3=Color3.fromRGB(40,40,48); espPage.Visible=true
    else tabUtil.BackgroundColor3=Color3.fromRGB(40,40,48); utilPage.Visible=true end
end
tabPlayers.MouseButton1Click:Connect(function() setTab("PLAYERS") end)
tabESP.MouseButton1Click:Connect(function() setTab("ESP") end)
tabUtil.MouseButton1Click:Connect(function() setTab("UTIL") end)

-- Lista de jogadores
local function clearPlayersList()
    for _, c in ipairs(playersList:GetChildren()) do
        if c:IsA("TextButton") then c:Destroy() end
    end
end

local function addPlayerToRow(p)
    if p == LocalPlayer then return end
    
    local playerBtn = Instance.new("TextButton")
    playerBtn.Name = p.Name
    playerBtn.Size = UDim2.new(1, -8, 0, 40)
    playerBtn.BackgroundColor3 = Color3.fromRGB(36,36,44)
    playerBtn.Text = ""
    playerBtn.Parent = playersList
    Instance.new("UICorner", playerBtn).CornerRadius = UDim.new(0, 6)

    local nameLbl = Instance.new("TextLabel")
    nameLbl.BackgroundTransparency = 1
    nameLbl.Size = UDim2.new(1, -8, 1, 0)
    nameLbl.Position = UDim2.new(0, 8, 0, 0)
    nameLbl.Font = Enum.Font.GothamSemibold
    nameLbl.TextSize = 14
    nameLbl.TextColor3 = Color3.fromRGB(255,255,255)
    nameLbl.TextXAlignment = Enum.TextXAlignment.Left
    
    local tag = ""
    if LocalPlayer.Team and p.Team then 
        tag = (p.Team == LocalPlayer.Team) and " [Aliado]" or " [Inimigo]" 
    end
    
    nameLbl.Text = (p.DisplayName or p.Name) .. " (@"..p.Name..")"..tag
    nameLbl.Parent = playerBtn

    local selectionIndicator = Instance.new("Frame")
    selectionIndicator.Size = UDim2.new(0, 4, 1, -8)
    selectionIndicator.Position = UDim2.new(0, 2, 0, 4)
    selectionIndicator.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
    selectionIndicator.Visible = false
    selectionIndicator.Parent = playerBtn
    Instance.new("UICorner", selectionIndicator).CornerRadius = UDim.new(0, 2)

    playerBtn.MouseButton1Click:Connect(function()
        for _, btn in ipairs(playersList:GetChildren()) do
            if btn:IsA("TextButton") and btn:FindFirstChildOfClass("Frame") then
                btn:FindFirstChildOfClass("Frame").Visible = false
                btn.BackgroundColor3 = Color3.fromRGB(36,36,44)
            end
        end
        
        selectionIndicator.Visible = true
        playerBtn.BackgroundColor3 = Color3.fromRGB(50,50,60)
        selectedPlayer = p
        showActionButtons(p)
    end)

    return playerBtn
end

local function rebuildPlayersList()
    clearPlayersList()
    for _, p in ipairs(Players:GetPlayers()) do 
        addPlayerToRow(p) 
    end
    playersList.CanvasSize = UDim2.new(0, 0, 0, playersLayout.AbsoluteContentSize.Y + 8)
    
    if selectedPlayer and selectedPlayer.Parent then
        local btn = playersList:FindFirstChild(selectedPlayer.Name)
        if btn then
            btn:FindFirstChildOfClass("Frame").Visible = true
            btn.BackgroundColor3 = Color3.fromRGB(50,50,60)
            showActionButtons(selectedPlayer)
        else
            selectedPlayer = nil
            hideActionButtons()
        end
    else
        selectedPlayer = nil
        hideActionButtons()
    end
end

playersLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    playersList.CanvasSize = UDim2.new(0, 0, 0, playersLayout.AbsoluteContentSize.Y + 8)
end)

Players.PlayerAdded:Connect(function(p) 
    addPlayerToRow(p)
    playersList.CanvasSize = UDim2.new(0, 0, 0, playersLayout.AbsoluteContentSize.Y + 8)
end)

Players.PlayerRemoving:Connect(function(p)
    local btn = playersList:FindFirstChild(p.Name)
    if btn then btn:Destroy() end
    playersList.CanvasSize = UDim2.new(0, 0, 0, playersLayout.AbsoluteContentSize.Y + 8)
    
    if selectedPlayer == p then
        selectedPlayer = nil
        hideActionButtons()
    end
    
    if spectating == p then stopSpectate() end
    if grabbedPlayer == p then stopGrab() end
    if buggingPlayers[p] then stopBugPlayer(p) end
end)

-- Mostrar/ocultar painel
local function showPanel(show)
    if panelVisible == show then return end
    panelVisible = show
    frame.Visible = show
    
    if show then
        prevMouseBehavior = UserInputService.MouseBehavior
        prevMouseIconEnabled = UserInputService.MouseIconEnabled
        
        UserInputService.MouseBehavior = Enum.MouseBehavior.Default
        UserInputService.MouseIconEnabled = true
        
        rebuildPlayersList()
    else
        if prevMouseBehavior then 
            UserInputService.MouseBehavior = prevMouseBehavior 
        end
        if prevMouseIconEnabled ~= nil then 
            UserInputService.MouseIconEnabled = prevMouseIconEnabled 
        end
    end
end

local function toggleAction(_, state, _)
    if state == Enum.UserInputState.Begin then
        showPanel(not panelVisible)
    end
    return Enum.ContextActionResult.Sink
end
ContextActionService:BindActionAtPriority("TogglePanel", toggleAction, false, 2000, UI_TOGGLE_KEY)

-- Input geral
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    if input.KeyCode == FREEFLY_TOGGLE_KEY then
        ArcEusFly()
        freeflyToggleBtn.Text = "ArcEus Fly: " .. (freeflyOn and "ON (F)" or "OFF (F)")
    elseif input.KeyCode == CANCEL_FLY_KEY then
        cancelActiveAction()
    elseif input.KeyCode == GRAB_TOGGLE_KEY then
        local myChar = LocalPlayer.Character
        if not myChar then return end
        
        local myRoot = getPrimaryPart(myChar)
        if not myRoot then return end
        
        local nearestPlayer = nil
        local nearestDistance = 20
        
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                local targetRoot = getPrimaryPart(player.Character)
                if targetRoot then
                    local distance = (targetRoot.Position - myRoot.Position).Magnitude
                    if distance <= nearestDistance then
                        nearestDistance = distance
                        nearestPlayer = player
                    end
                end
            end
        end
        
        if nearestPlayer then
            startGrab(nearestPlayer)
        end
    elseif input.KeyCode == UNLOCK_MOUSE_KEY then
        unlockMouse()
    elseif input.KeyCode == Enum.KeyCode.W then inputStates.W = true
    elseif input.KeyCode == Enum.KeyCode.A then inputStates.A = true
    elseif input.KeyCode == Enum.KeyCode.S then inputStates.S = true
    elseif input.KeyCode == Enum.KeyCode.D then inputStates.D = true
    elseif input.KeyCode == Enum.KeyCode.Space then inputStates.Space = true
    elseif input.KeyCode == Enum.KeyCode.LeftShift or input.KeyCode == Enum.KeyCode.RightShift then inputStates.Shift = true
    elseif input.KeyCode == Enum.KeyCode.Q then inputStates.Q = true
    elseif input.KeyCode == Enum.KeyCode.E then inputStates.E = true
    elseif input.KeyCode == UI_TOGGLE_KEY then
        showPanel(not panelVisible)
    end
end)

UserInputService.InputEnded:Connect(function(input, _)
    if input.KeyCode == Enum.KeyCode.W then inputStates.W = false
    elseif input.KeyCode == Enum.KeyCode.A then inputStates.A = false
    elseif input.KeyCode == Enum.KeyCode.S then inputStates.S = false
    elseif input.KeyCode == Enum.KeyCode.D then inputStates.D = false
    elseif input.KeyCode == Enum.KeyCode.Space then inputStates.Space = false
    elseif input.KeyCode == Enum.KeyCode.LeftShift or input.KeyCode == Enum.KeyCode.RightShift then inputStates.Shift = false
    elseif input.KeyCode == Enum.KeyCode.Q then inputStates.Q = false
    elseif input.KeyCode == Enum.KeyCode.E then inputStates.E = false
end)

-- Atualizar estado dos botões
RunService.Heartbeat:Connect(function()
    if grabToggleBtn then
        grabToggleBtn.Text = "Agarrar Próximo: " .. (grabbing and "ON (H)" or "OFF (H)")
        grabToggleBtn.BackgroundColor3 = grabbing and Color3.fromRGB(180,80,180) or Color3.fromRGB(120,40,120)
    end
    if bugCarBtn then
        local hasBuggingCars = false
        for _ in pairs(buggingCars) do
            hasBuggingCars = true
            break
        end
        if hasBuggingCars then
            bugCarBtn.Text = "PARAR BUG CARROS"
            bugCarBtn.BackgroundColor3 = Color3.fromRGB(40,200,40)
        else
            bugCarBtn.Text = "BUGAR CARROS PRÓXIMOS"
            bugCarBtn.BackgroundColor3 = Color3.fromRGB(200,40,40)
        end
    end
    if pullCarBtn then
        pullCarBtn.Text = activeSystems.pullCar and "SOLTAR CARRO" or "PUXAR CARRO PRÓXIMO"
        pullCarBtn.BackgroundColor3 = activeSystems.pullCar and Color3.fromRGB(40,200,40) or Color3.fromRGB(0,150,200)
    end
    
    -- Atualizar botão cancelar se há alguma ação ativa
    local anyActionActive = activeSystems.flyTo or activeSystems.spectate or activeSystems.grab or 
                           activeSystems.bugPlayer or activeSystems.bugCar or activeSystems.pullCar
    cancelActionBtn.Visible = anyActionActive
end)

-- Sistema de ESP quando morrer
LocalPlayer.CharacterAdded:Connect(function()
    task.wait(1)
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then
            refreshESPForPlayer(p)
        end
    end
end)

-- Boot
rebuildPlayersList()
for _, p in ipairs(Players:GetPlayers()) do if p ~= LocalPlayer and p.Character then refreshESPForPlayer(p) end end
print("✅ Painel pronto! Sistema ArcEus Fly integrado!")
print("🔑 CONTROLES: M (Painel) | P (Destravar Mouse) | F (ArcEus Fly) | H (Agarrar) | X (Cancelar)")
print("🚗 SISTEMAS: Bugar Carros Físico | Puxar Carros | Detectar Carro do Player")
